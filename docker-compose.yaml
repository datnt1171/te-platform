services:
  backend:
    build: ./backend
    container_name: backend
    restart: unless-stopped
    command: gunicorn task_management.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 8
    volumes:
      - ./backend/media:/app/media
    env_file:
      - ./backend/.env
    expose:
      - 8000
    depends_on:
      - db
    networks:
      - cloudflared

  dw:
    build: ./dw
    container_name: fastapi_dw
    restart: unless-stopped
    volumes:
      - ./dw/media:/app/media
    env_file:
      - ./dw/.env
    expose:
      - 8001
    depends_on:
      - db
    networks:
      - cloudflared
  frontend:
    build: ./frontend
    container_name: frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env.local
    expose:
      - 3000
    depends_on:
      - backend
    networks:
      - cloudflared

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/media:/media
      - ./dw/media:/dw-media
    depends_on:
      - backend
      - frontend
      - dw
    networks:
      - cloudflared

  db:
    image: postgres:15
    container_name: shared_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - cloudflared

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-te
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    networks:
      - cloudflared

  cloudflared_db:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-db
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - TUNNEL_TOKEN=${TUNNEL_TOKEN_DB}
    command: tunnel --no-autoupdate run
    networks:
      - cloudflared

volumes:
  media_volume:
  db_data:

networks:
  cloudflared:
    name: cloudflared
    external: true